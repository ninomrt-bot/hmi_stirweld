{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/NinoMarquet-Stirweld/Documents/IHM%202.0%20stirweld/frontend/src/lib/chart.ts"],"sourcesContent":["// Enregistre tous les modules Chart.js dont tu as besoin\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// (optionnel) export si tu veux l'utiliser ailleurs\r\nexport { ChartJS };\r\n"],"names":[],"mappings":"AAAA,yDAAyD;;AACzD;;AAWA,4JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,4JAAA,CAAA,gBAAa,EACb,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,eAAY,EACZ,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,QAAK,EACL,4JAAA,CAAA,UAAO,EACP,4JAAA,CAAA,SAAM","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/NinoMarquet-Stirweld/Documents/IHM%202.0%20stirweld/frontend/src/components/Gauge.tsx"],"sourcesContent":["\"use client\";\r\nimport dynamic from \"next/dynamic\";\r\nconst ReactSpeedometer = dynamic(() => import(\"react-d3-speedometer\"), { ssr: false });\r\n\r\nexport function Gauge({ value, max = 50, label }: { value: number; max?: number; label: string }) {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-2\">\r\n      <ReactSpeedometer\r\n        value={value}\r\n        maxValue={max}\r\n        height={160}\r\n        width={200}\r\n        ringWidth={30}\r\n        needleColor=\"#ff6600\"\r\n        startColor=\"#071039\"\r\n        endColor=\"#ff6600\"\r\n        textColor=\"#071039\"\r\n        forceRender\r\n      />\r\n      <span className=\"font-semibold\">{label}: {value}</span>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;AADA;;;AAEA,MAAM,mBAAmB,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;IAA0C,KAAK;;AAEvE,SAAS,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,KAAK,EAAkD;IAC9F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,OAAO;gBACP,UAAU;gBACV,QAAQ;gBACR,OAAO;gBACP,WAAW;gBACX,aAAY;gBACZ,YAAW;gBACX,UAAS;gBACT,WAAU;gBACV,WAAW;;;;;;0BAEb,8OAAC;gBAAK,WAAU;;oBAAiB;oBAAM;oBAAG;;;;;;;;;;;;;AAGhD","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/NinoMarquet-Stirweld/Documents/IHM%202.0%20stirweld/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\n// Dashboard page – suivi temps‑réel (Force & Z Position)\r\n// ----------------------------------------------------\r\n// – Gauges : Force 0‑50 kN  •  Z Position 0‑100 mm\r\n// – Courbes temps réel synchronisées (500 pts max)\r\n// – WebSocket URL : NEXT_PUBLIC_WS_URL\r\n\r\nimport \"@/lib/chart\"; // enregistre les modules Chart.js (LinearScale, LineElement…)\r\nimport { useState, useEffect } from \"react\";\r\nimport { Gauge } from \"@/components/Gauge\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default function Dashboard() {\r\n  // -----------------------------\r\n  // ÉTATS LOCAUX\r\n  // -----------------------------\r\n  const [force, setForce] = useState<number>(0);\r\n  const [zPos, setZPos]   = useState<number>(0);\r\n  const [points, setPoints] = useState<Array<{ t:number; f:number; z:number }>>([]);\r\n\r\n  // -----------------------------\r\n  // SOCKET.IO  – RÉCEPTION TEMPS RÉEL\r\n  // -----------------------------\r\n  useEffect(() => {\r\n    const url = process.env.NEXT_PUBLIC_WS_URL ?? \"http://localhost:4000\";\r\n    const socket = io(url, { transports: [\"websocket\"] });\r\n\r\n    socket.on(\"telemetry\", (data: { force:number; z_position:number }) => {\r\n      // maj jauges\r\n      setForce(data.force);\r\n      setZPos(data.z_position);\r\n      // stack circulaire 500 pts\r\n      setPoints((prev) => [...prev.slice(-499), { t: Date.now(), f: data.force, z: data.z_position }]);\r\n    });\r\n\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  // -----------------------------\r\n  // DATASET CHART.JS\r\n  // -----------------------------\r\n  const chartData = {\r\n    labels: points.map((p) => new Date(p.t).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: \"Force [kN]\",\r\n        data: points.map((p) => p.f),\r\n        borderWidth: 2,\r\n        tension: 0.3,\r\n        yAxisID: \"yLeft\",\r\n      },\r\n      {\r\n        label: \"Z Position [mm]\",\r\n        data: points.map((p) => p.z),\r\n        borderWidth: 2,\r\n        borderDash: [6, 4],\r\n        tension: 0.3,\r\n        yAxisID: \"yRight\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    animation: false,\r\n    scales: {\r\n      yLeft: {\r\n        type: \"linear\" as const,\r\n        position: \"left\" as const,\r\n        title: { display: true, text: \"Force [kN]\" },\r\n      },\r\n      yRight: {\r\n        type: \"linear\" as const,\r\n        position: \"right\" as const,\r\n        grid: { drawOnChartArea: false },\r\n        title: { display: true, text: \"Z Position [mm]\" },\r\n      },\r\n    },\r\n  };\r\n\r\n  // -----------------------------\r\n  // RENDER\r\n  // -----------------------------\r\n  return (\r\n    <div className=\"grid lg:grid-cols-3 gap-6\">\r\n      {/* Gauges */}\r\n      <div className=\"col-span-1 flex flex-col gap-6\">\r\n        <Gauge value={force} max={50}  label=\"Force [kN]\" />\r\n        <Gauge value={zPos}  max={100} label=\"Z Position [mm]\" />\r\n      </div>\r\n\r\n      {/* Courbe multi‑séries */}\r\n      <div className=\"col-span-2 bg-white rounded-xl p-4 shadow\">\r\n        <Line data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA,yDAAyD;AACzD,uDAAuD;AACvD,mDAAmD;AACnD,mDAAmD;AACnD,uCAAuC;AAEvC,wPAAsB,8DAA8D;AACpF;AACA;AACA;AACA;AAAA;AAZA;;;;;;;AAce,SAAS;IACtB,gCAAgC;IAChC,eAAe;IACf,gCAAgC;IAChC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAK,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2C,EAAE;IAEhF,gCAAgC;IAChC,oCAAoC;IACpC,gCAAgC;IAChC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,MAAM,QAAQ,GAAG,CAAC,kBAAkB,IAAI;QAC9C,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE,KAAK;YAAE,YAAY;gBAAC;aAAY;QAAC;QAEnD,OAAO,EAAE,CAAC,aAAa,CAAC;YACtB,aAAa;YACb,SAAS,KAAK,KAAK;YACnB,QAAQ,KAAK,UAAU;YACvB,2BAA2B;YAC3B,UAAU,CAAC,OAAS;uBAAI,KAAK,KAAK,CAAC,CAAC;oBAAM;wBAAE,GAAG,KAAK,GAAG;wBAAI,GAAG,KAAK,KAAK;wBAAE,GAAG,KAAK,UAAU;oBAAC;iBAAE;QACjG;QAEA,OAAO,IAAM,OAAO,KAAK;IAC3B,GAAG,EAAE;IAEL,gCAAgC;IAChC,mBAAmB;IACnB,gCAAgC;IAChC,MAAM,YAAY;QAChB,QAAQ,OAAO,GAAG,CAAC,CAAC,IAAM,IAAI,KAAK,EAAE,CAAC,EAAE,kBAAkB;QAC1D,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,OAAO,GAAG,CAAC,CAAC,IAAM,EAAE,CAAC;gBAC3B,aAAa;gBACb,SAAS;gBACT,SAAS;YACX;YACA;gBACE,OAAO;gBACP,MAAM,OAAO,GAAG,CAAC,CAAC,IAAM,EAAE,CAAC;gBAC3B,aAAa;gBACb,YAAY;oBAAC;oBAAG;iBAAE;gBAClB,SAAS;gBACT,SAAS;YACX;SACD;IACH;IAEA,MAAM,eAAe;QACnB,YAAY;QACZ,WAAW;QACX,QAAQ;YACN,OAAO;gBACL,MAAM;gBACN,UAAU;gBACV,OAAO;oBAAE,SAAS;oBAAM,MAAM;gBAAa;YAC7C;YACA,QAAQ;gBACN,MAAM;gBACN,UAAU;gBACV,MAAM;oBAAE,iBAAiB;gBAAM;gBAC/B,OAAO;oBAAE,SAAS;oBAAM,MAAM;gBAAkB;YAClD;QACF;IACF;IAEA,gCAAgC;IAChC,SAAS;IACT,gCAAgC;IAChC,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,QAAK;wBAAC,OAAO;wBAAO,KAAK;wBAAK,OAAM;;;;;;kCACrC,8OAAC,2HAAA,CAAA,QAAK;wBAAC,OAAO;wBAAO,KAAK;wBAAK,OAAM;;;;;;;;;;;;0BAIvC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,sJAAA,CAAA,OAAI;oBAAC,MAAM;oBAAW,SAAS;;;;;;;;;;;;;;;;;AAIxC","debugId":null}}]
}