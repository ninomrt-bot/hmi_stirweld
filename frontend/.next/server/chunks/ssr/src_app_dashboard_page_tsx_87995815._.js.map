{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/NinoMarquet-Stirweld/Documents/IHM%202.0%20stirweld/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { ChevronDown } from \"lucide-react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Label,\r\n} from \"recharts\";\r\n\r\n/**************************** Config jauges ****************************/\r\ninterface GaugeConfig {\r\n  min: number;\r\n  max: number;\r\n  alarmLow?: number;\r\n  alarmHigh?: number;\r\n  unit?: string;\r\n}\r\n\r\nconst CONFIGS: Record<string, GaugeConfig> = {\r\n  \"TOOL TEMP\": { min: 0, max: 250, alarmLow: 10, alarmHigh: 220, unit: \"°C\" },\r\n  \"TOOL TEMP DEVICE\": { min: 0, max: 120, alarmLow: 5, alarmHigh: 100, unit: \"°C\" },\r\n  \"HEAD TEMPERATURE N°1\": { min: 0, max: 250, alarmLow: 10, alarmHigh: 220, unit: \"°C\" },\r\n  \"HEAD TEMPERATURE N°2\": { min: 0, max: 250, alarmLow: 10, alarmHigh: 220, unit: \"°C\" },\r\n  FORCE: { min: 0, max: 20000, alarmHigh: 18000, unit: \"N\" },\r\n  \"Z POSITION\": { min: -50, max: 50, unit: \"mm\" },\r\n  \"ROTATION SPEED\": { min: 0, max: 11000, alarmHigh: 10000, unit: \"rpm\" },\r\n};\r\n\r\nconst OPTIONS = Object.keys(CONFIGS);\r\n\r\n/**************************** Mapping PLC ****************************/\r\nconst API = process.env.NEXT_PUBLIC_BACKEND_URL ?? \"http://localhost:3001\";\r\n\r\ntype PlcType = \"REAL\" | \"UDINT\" | string;\r\nconst PLC: Record<string, { name: string; type: PlcType; scale?: number }> = {\r\n  \"TOOL TEMP\": { name: \"GVL_Public.g_tool_temp\", type: \"REAL\" },\r\n  \"TOOL TEMP DEVICE\": { name: \"GVL_Public.g_tool_device\", type: \"REAL\" },\r\n  \"HEAD TEMPERATURE N°1\": { name: \"GVL_Public.real_g_head_temperature_n1\", type: \"REAL\" },\r\n  \"HEAD TEMPERATURE N°2\": { name: \"GVL_Public.g_head_temperature_n2\", type: \"REAL\" },\r\n  FORCE: { name: \"GVL_Public.g_force\", type: \"REAL\" },\r\n  \"Z POSITION\": { name: \"GVL_Public.g_ZPos\", type: \"REAL\" },\r\n  \"ROTATION SPEED\": { name: \"GVL_Public.g_rotation_speed\", type: \"UDINT\" },\r\n};\r\n\r\n/**************************** Types ****************************/\r\ninterface Point { t: number; v: number }\r\n\r\ntype TimeScale = \"s\" | \"m\" | \"h\";\r\n\r\n/**************************** Fréquences & limites ****************************/\r\n// Rendu UI (découplé du polling)\r\nconst UI_FPS = 10; // 10 fps → fluide sans charger le CPU\r\nconst UI_TICK_MS = Math.round(1000 / UI_FPS);\r\n\r\n// Échantillonnage historique\r\nconst SAMPLE_WHEN_VISIBLE_MS = 200; // 5 Hz\r\nconst SAMPLE_WHEN_HIDDEN_MS = 1000; // 1 Hz onglet masqué\r\n\r\n// Historique conservé (points)\r\nconst HISTORY_LIMIT = 300;\r\n\r\n/**************************** Ring buffer (sans hooks) ****************************/\r\nfunction createRingBuffer(limit: number) {\r\n  let buf: Point[] = [];\r\n  return {\r\n    push(p: Point) {\r\n      if (buf.length < limit) buf.push(p);\r\n      else { buf.splice(0, 1); buf.push(p); }\r\n    },\r\n    getData() { return buf.slice(); },\r\n    clearAndSeed(p: Point) { buf = [p]; },\r\n  } as const;\r\n}\r\n\r\n/**************************** Helper JSON sûr ****************************/\r\nasync function safeJson(r: Response) {\r\n  const ct = r.headers.get(\"content-type\") || \"\";\r\n  const text = await r.text();\r\n  if (ct.includes(\"application/json\")) {\r\n    try { return JSON.parse(text); }\r\n    catch (e) { console.error(\"JSON parse error:\", e, text.slice(0, 200)); throw new Error(\"Bad JSON from backend\"); }\r\n  }\r\n  console.error(\"Expected JSON, got:\", ct || \"unknown\", \"payload:\", text.slice(0, 200));\r\n  throw new Error(\"Backend returned non-JSON (HTML?)\");\r\n}\r\n\r\n/**************************** Chart (mémoïsé) ****************************/\r\nconst ChartArea = React.memo(function ChartArea({\r\n  data,\r\n  unit,\r\n  pathColor,\r\n  timeFormatter,\r\n  timeUnitLabel,\r\n  yMin,\r\n  yMax,\r\n}: {\r\n  data: Point[];\r\n  unit: string;\r\n  pathColor: string;\r\n  timeFormatter: (t: number) => string;\r\n  timeUnitLabel: string;\r\n  yMin: number;\r\n  yMax: number;\r\n}) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart data={data} margin={{ top: 10, right: 20, bottom: 10, left: 0 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"t\" type=\"number\" domain={[\"dataMin\", \"dataMax\"]} minTickGap={35} tickFormatter={timeFormatter}>\r\n          <Label value={`Temps (${timeUnitLabel})`} position=\"insideBottom\" offset={-5} style={{ fill: \"#6b7280\", fontSize: 12 }} />\r\n        </XAxis>\r\n        <YAxis domain={[yMin, yMax]}>\r\n          <Label value={unit} angle={-90} position=\"insideLeft\" style={{ fill: \"#6b7280\", fontSize: 12 }} />\r\n        </YAxis>\r\n        <Tooltip labelFormatter={(l) => `t=${timeFormatter(Number(l))} ${timeUnitLabel}`} formatter={(v: number) => [`${(v as number).toFixed(2)} ${unit}`.trim(), \"\"]} />\r\n        <Line type=\"linear\" dataKey=\"v\" stroke={pathColor} dot={false} isAnimationActive={false} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n});\r\n\r\n/**************************** Page ****************************/\r\nexport default function DashboardPage() {\r\n  // Sélection métrique\r\n  const [selected, setSelected] = useState<string>(OPTIONS[0]);\r\n  const selectedRef = useRef(selected);\r\n  useEffect(() => { selectedRef.current = selected; }, [selected]);\r\n\r\n  // Valeurs affichées (throttle 10 fps)\r\n  const [displayValues, setDisplayValues] = useState<Record<string, number>>(\r\n    () => Object.fromEntries(OPTIONS.map(k => [k, 0]))\r\n  );\r\n\r\n  // Valeurs brutes en ref (pour éviter les re-renders à chaque poll)\r\n  const liveValuesRef = useRef<Record<string, number>>(\r\n    Object.fromEntries(OPTIONS.map(k => [k, 0])) as Record<string, number>\r\n  );\r\n\r\n  // Buffers par métrique (fabriqués une seule fois)\r\n  const buffersRef = useRef<Record<string, ReturnType<typeof createRingBuffer>> | null>(null);\r\n  if (!buffersRef.current) {\r\n    buffersRef.current = Object.fromEntries(OPTIONS.map(k => [k, createRingBuffer(HISTORY_LIMIT)])) as Record<string, ReturnType<typeof createRingBuffer>>;\r\n  }\r\n\r\n  // Flags\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [timeScale, setTimeScale] = useState<TimeScale>(\"s\");\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const cfg = CONFIGS[selected];\r\n  const value = displayValues[selected] ?? 0;\r\n  const unit = cfg.unit ?? \"\";\r\n\r\n  /************ jauge ************/\r\n  const { percentage, pathColor, min, max } = useMemo(() => {\r\n    const span = cfg.max - cfg.min || 1;\r\n    let pct = ((value - cfg.min) / span) * 100;\r\n    pct = Math.min(100, Math.max(0, pct));\r\n    const hi = cfg.alarmHigh !== undefined && value >= cfg.alarmHigh;\r\n    const lo = cfg.alarmLow !== undefined && value <= cfg.alarmLow;\r\n    const color = hi ? \"#ef4444\" : lo ? \"#f59e0b\" : \"#10b981\";\r\n    return { percentage: pct, pathColor: color, min: cfg.min, max: cfg.max };\r\n  }, [cfg, value]);\r\n\r\n  /************ Seed à chaque changement de métrique ************/\r\n  useEffect(() => {\r\n    setIsReady(false);\r\n    setError(null);\r\n    const map = PLC[selected];\r\n    let cancelled = false;\r\n\r\n    if (!map) { setIsReady(true); return; }\r\n\r\n    (async () => {\r\n      try {\r\n        const url = `${API}/api/read?name=${encodeURIComponent(map.name)}&type=${encodeURIComponent(map.type)}`;\r\n        const r = await fetch(url, { cache: \"no-store\" });\r\n        if (!r.ok) throw new Error(`seed read failed: ${r.status}`);\r\n        const data = await safeJson(r);\r\n        const raw = Number((data as any)?.value);\r\n        if (!Number.isFinite(raw)) throw new Error(\"seed NaN\");\r\n        const v0 = (map.scale ?? 1) * raw;\r\n        if (cancelled) return;\r\n\r\n        liveValuesRef.current[selected] = v0;\r\n        const now = Date.now();\r\n        buffersRef.current![selected].clearAndSeed({ t: now - SAMPLE_WHEN_VISIBLE_MS, v: v0 });\r\n        buffersRef.current![selected].push({ t: now, v: v0 });\r\n        setIsReady(true);\r\n      } catch (e: any) {\r\n        console.error(e);\r\n        if (!cancelled) setError(e?.message || \"Erreur seed\");\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n  }, [selected]);\r\n\r\n  /************ Polling PLC (maj ref) ************/\r\n  useEffect(() => {\r\n    let stop = false;\r\n    let timer: ReturnType<typeof setTimeout> | null = null;\r\n\r\n    const schedule = (ms: number) => { if (!stop) timer = setTimeout(pollOnce, ms); };\r\n\r\n    const pollOnce = async () => {\r\n      const key = selectedRef.current;\r\n      const map = PLC[key];\r\n      if (!map) return schedule(document.hidden ? 1000 : 200);\r\n      try {\r\n        const url = `${API}/api/read?name=${encodeURIComponent(map.name)}&type=${encodeURIComponent(map.type)}`;\r\n        const r = await fetch(url, { cache: \"no-store\" });\r\n        if (r.ok) {\r\n          try {\r\n            const data = await safeJson(r);\r\n            const raw = Number((data as any)?.value);\r\n            if (Number.isFinite(raw)) {\r\n              liveValuesRef.current[key] = (map.scale ?? 1) * raw;\r\n            }\r\n          } catch (e) {\r\n            // garde silencieux pour éviter de spammer, mais log console\r\n            console.warn(\"poll JSON issue\", e);\r\n          }\r\n        } else {\r\n          console.warn(\"poll status\", r.status);\r\n        }\r\n      } catch (e) {\r\n        console.warn(\"poll error\", e);\r\n      }\r\n      schedule(document.hidden ? 1000 : 200);\r\n    };\r\n\r\n    pollOnce();\r\n    return () => { stop = true; if (timer) clearTimeout(timer); };\r\n  }, []);\r\n\r\n  /************ Sampling -> push historique ************/\r\n  useEffect(() => {\r\n    let stop = false;\r\n    let timer: ReturnType<typeof setTimeout> | null = null;\r\n\r\n    const tick = () => {\r\n      if (stop) return;\r\n      if (isReady) {\r\n        const key = selectedRef.current;\r\n        const v = liveValuesRef.current[key] ?? 0;\r\n        buffersRef.current![key].push({ t: Date.now(), v });\r\n      }\r\n      const ms = document.hidden ? SAMPLE_WHEN_HIDDEN_MS : SAMPLE_WHEN_VISIBLE_MS;\r\n      timer = setTimeout(tick, ms);\r\n    };\r\n\r\n    tick();\r\n    return () => { stop = true; if (timer) clearTimeout(timer); };\r\n  }, [isReady]);\r\n\r\n  /************ UI ticker (10 fps) ************/\r\n  const [uiTick, setUiTick] = useState(0);\r\n  useEffect(() => {\r\n    const id = setInterval(() => setUiTick(v => v + 1), UI_TICK_MS);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  // Sync valeur affichée (métrique sélectionnée)\r\n  useEffect(() => {\r\n    const key = selected;\r\n    setDisplayValues(prev => ({ ...prev, [key]: liveValuesRef.current[key] ?? 0 }));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [uiTick, selected]);\r\n\r\n  /************ Données chart + axes ************/\r\n  const history = useMemo(() => buffersRef.current![selected].getData(), [uiTick, selected]);\r\n\r\n  const t0 = history.length ? history[0].t : Date.now();\r\n  const timeUnitLabel = timeScale === \"s\" ? \"s\" : timeScale === \"m\" ? \"min\" : \"h\";\r\n  const timeFormatter = useCallback((t: number) => {\r\n    const dt = Math.max(0, t - t0) / 1000; // s\r\n    if (timeScale === \"s\") return `${dt.toFixed(1)}`;\r\n    if (timeScale === \"m\") return `${(dt / 60).toFixed(2)}`;\r\n    return `${(dt / 3600).toFixed(3)}`;\r\n  }, [t0, timeScale]);\r\n\r\n  const [yMin, yMax] = useMemo<[number, number]>(() => {\r\n    const c = CONFIGS[selected];\r\n    const maxObserved = history.length ? Math.max(...history.map(p => p.v), displayValues[selected] || 0) : displayValues[selected] || 0;\r\n    const baseMax = maxObserved === 0 ? 1 : maxObserved * 1.1;\r\n    const step = c.max >= 1000 ? 100 : 10;\r\n    const upper = Math.min(c.max, Math.ceil(baseMax / step) * step);\r\n    const lower = c.min >= 0 ? 0 : c.min;\r\n    return [lower, upper];\r\n  }, [selected, history, displayValues]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full p-8 bg-gray-100 flex flex-col gap-6\">\r\n      {error && (\r\n        <div className=\"bg-red-50 text-red-700 border border-red-200 rounded-lg p-3 text-sm\">\r\n          <b>Erreur lecture:</b> {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-full bg-white rounded-2xl p-6 shadow-lg flex flex-col md:flex-row gap-6\">\r\n        {/* --- Colonne jauge --- */}\r\n        <div className=\"md:w-1/4 flex flex-col items-center\">\r\n          <div className=\"relative w-full md:w-4/5\">\r\n            <select\r\n              className=\"w-full border border-gray-300 rounded px-3 py-2 text-center text-lg font-bold appearance-none\"\r\n              value={selected}\r\n              onChange={(e) => setSelected(e.currentTarget.value)}\r\n            >\r\n              {OPTIONS.map((opt) => (\r\n                <option key={opt}>{opt}</option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown size={20} className=\"absolute top-1/2 right-3 -translate-y-1/2 text-gray-500 pointer-events-none\" />\r\n          </div>\r\n\r\n          <div className=\"mt-6 w-full max-w-xs h-[140px] overflow-hidden\">\r\n            <CircularProgressbar\r\n              value={percentage}\r\n              maxValue={100}\r\n              circleRatio={0.5}\r\n              strokeWidth={5}\r\n              text=\"\"\r\n              styles={buildStyles({ rotation: 0.75, pathColor, trailColor: \"#e5e7eb\", strokeLinecap: \"butt\" })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"-mt-12 text-center select-none pointer-events-none\">\r\n            <span className=\"text-4xl font-bold text-[#071039]\">\r\n              {value.toFixed(1)}\r\n              {unit ? <span className=\"ml-1 text-base font-medium text-gray-500\">{unit}</span> : null}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"mt-1 flex justify-between w-full md:w-4/5 text-xs text-gray-500 font-medium\">\r\n            <span>{min}</span>\r\n            <span>{max}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* --- Colonne graph --- */}\r\n        <div className=\"md:w-3/4 h-[360px]\">\r\n          <ChartArea\r\n            data={history}\r\n            unit={unit}\r\n            pathColor={pathColor}\r\n            timeFormatter={timeFormatter}\r\n            timeUnitLabel={timeUnitLabel}\r\n            yMin={yMin}\r\n            yMax={yMax}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Slider de test (désactivé si la métrique est lue en live) */}\r\n      <input\r\n        type=\"range\"\r\n        min={CONFIGS[selected].min}\r\n        max={CONFIGS[selected].max}\r\n        value={value}\r\n        onChange={(e) => {\r\n          const v = parseFloat(e.currentTarget.value);\r\n          liveValuesRef.current[selected] = v;\r\n          setDisplayValues((prev) => ({ ...prev, [selected]: v }));\r\n        }}\r\n        className=\"w-full\"\r\n        disabled={!!PLC[selected]}\r\n      />\r\n\r\n      {/* Contrôle de l'échelle de temps */}\r\n      <div className=\"flex gap-2 items-center text-sm text-gray-600\">\r\n        <span>Échelle temps:</span>\r\n        <button onClick={() => setTimeScale(\"s\")} className={`px-2 py-1 rounded ${timeScale === \"s\" ? \"bg-gray-200\" : \"\"}`}>s</button>\r\n        <button onClick={() => setTimeScale(\"m\")} className={`px-2 py-1 rounded ${timeScale === \"m\" ? \"bg-gray-200\" : \"\"}`}>min</button>\r\n        <button onClick={() => setTimeScale(\"h\")} className={`px-2 py-1 rounded ${timeScale === \"h\" ? \"bg-gray-200\" : \"\"}`}>h</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}